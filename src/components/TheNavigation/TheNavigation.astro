---
// Libraries and Packages
import {Icon} from "astro-icon";

// Styles
import "./TheNavigation.scss";
---

<nav class="nav">
    <div class="nav__menu">
        <button id="close-nav" class="[ close-nav ] [ button-reset fs-700 ]">
            <Icon name="close" width="30" class="interactive-icon svg-icon" />
        </button>

        <ul role="list">
            <li><a href="/">Home</a></li>
            <li><a href="about">About</a></li>
            <li><a href="therapy">Therapy</a></li>
            <li><a href="resources">Resources</a></li>
            <li>
                <a href="appointment" class="[ nav__button-contact ] [ button ]"
                    >Book Appointment</a
                >
            </li>
        </ul>
    </div>

    <button
        id="open-nav"
        class="[ open-nav ] [ p-0 fs-700 ]"
        data-btn-variant="secondary"
    >
        <Icon name="burger-menu" class="svg-icon interactive-icon" />
    </button>
</nav>

<script>
    import {createFocusTrap} from "focus-trap";

    (() => {
        const navMenu = document.querySelector(".nav__menu");
        const navMenuItems = navMenu?.querySelectorAll("ul > *");
        const openMenuBtn = document.getElementById("open-nav");
        const closeMenuBtn = document.getElementById("close-nav");

        if (!openMenuBtn || !closeMenuBtn || !navMenu || !navMenuItems)
            throw new Error("Something wrong happened fetching HTML elements!");

        if (!(navMenu instanceof HTMLElement))
            throw new Error("navMenu is not a HTMLElement!");

        const focusTrap = createFocusTrap(navMenu, {
            initialFocus: false,
        });

        Array.from(navMenuItems).forEach(el =>
            el.addEventListener("click", () => {
                navMenu?.removeAttribute("data-state-expanded");
                focusTrap.deactivate();
            }),
        );

        openMenuBtn?.addEventListener("click", () => {
            navMenu?.setAttribute("data-state-expanded", "");
            focusTrap.activate();
        });

        closeMenuBtn?.addEventListener("click", () => {
            navMenu?.removeAttribute("data-state-expanded");
            focusTrap.deactivate();
        });
    })();
</script>
